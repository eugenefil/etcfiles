#!/bin/sh

set -eu

mountfs()
{
	local type="$1" source="$2" target="$3" opts="$4" msg
	msg="mounting $type on $target with $opts"
	if mountpoint -q "$target"; then
		opts="remount,$opts"
		msg="re$msg"
	fi
	echo "$msg"
	mount -n -o "$opts" -t "$type" "$source" "$target"
}

mountfs proc proc /proc 'noexec,nosuid,nodev'
mountfs tmpfs run /run 'nosuid,nodev,mode=0755,size=10M,strictatime'
mountfs tmpfs tmp /tmp 'nosuid,nodev'
mountfs devtmpfs dev /dev 'noexec,nosuid,mode=0755,size=10M'
mountfs sysfs sys /sys 'noexec,nosuid,nodev'

# Init crng before udev runs, b/c it uses siphash24 for its hash
# tables (see src/shared/hashmap.c in eudev source) to generate random
# hashes and thus prevent hash flooding dos attacks (see
# https://en.wikipedia.org/wiki/SipHash). SipHash24 requires random
# 128-bit key which is obtained using getrandom(2) (look in
# src/shared/hashmap.c for calls to random_bytes(), which is
# implemented in src/shared/random-util.c via calling dev_urandom()
# which in turn calls getrandom(2)).
echo 'seeding crng'
/lib/rc/sbin/seedrng

echo 'starting coldplug'
udevd -d
# succeeded triggers don't mean successful coldplug, b/c a lot depends
# on udevd processing uevents in background, but triggers take time,
# so we don't wait and opportunistically run them in parallel
udevadm trigger --type=subsystems --action=add &
udevadm trigger --type=devices --action=add &

modules()
{
	echo 'loading modules'
	modprobe -a $netmodules

	# sysctl sets ipv6 params, so do after module loading
	echo 'running sysctl'
	for f in /lib/sysctl.d/*.conf /etc/sysctl.d/*.conf \
				      /etc/sysctl.conf; do
		[ -f "$f" ] && sysctl -q -p "$f"
	done
}
# dhcp requires af_packet (see packet(7)) to send raw packets
netmodules='af_packet ipv6'
modules &

echo 'setting hostname'
hostname -F /etc/hostname &

echo 'loading keymap'
loadkmap </etc/keymap/keymap.bmap &

echo 'starting syslogd'
syslogd -t &

net()
{
	echo 'starting network'
	# ifup doesn't check iface existence before running its
	# configure commands and udevd might not have registered iface
	# yet, so we wait for it to appear
	while ! [ -e /sys/class/net/eth0 ]; do
		sleep 1
	done
	ifup -a
	ntpd -N -p pool.ntp.org
}
net &

# set KERN_EMERG==0 msg level, so it's always printed on console even
# when "quiet" param was passed to kernel
echo '<0>sysinit done' >/dev/kmsg
