#!/bin/sh

set -eu

mountfs()
{
	local type="$1" source="$2" target="$3" opts="$4" msg
	msg="mounting $type on $target with $opts"
	if mountpoint -q "$target"; then
		opts="remount,$opts"
		msg="re$msg"
	fi
	echo "$msg"
	mount -n -o "$opts" -t "$type" "$source" "$target"
}

mountfs proc proc /proc 'noexec,nosuid,nodev'
mountfs tmpfs run /run 'nosuid,nodev,mode=0755,size=10M,strictatime'
mountfs tmpfs tmp /tmp 'nosuid,nodev,mode=1777'
mountfs devtmpfs dev /dev 'noexec,nosuid,mode=0755,size=10M'
[ -d /dev/pts ] || mkdir -m 755 /dev/pts
mountfs devpts devpts /dev/pts 'gid=5,mode=0620,noexec,nosuid'
mountfs sysfs sys /sys 'noexec,nosuid,nodev'

# if we fail somewhere along the way and exit prematurely, init will
# still run getty, so load keymap and set hostname early or we may end
# up with "(none) login: " getty prompt (default hostname "(none)" is
# controlled by CONFIG_DEFAULT_HOSTNAME) and non-comfy default keymap
echo 'loading keymap'
loadkmap </etc/keymap/keymap.bmap &
# keymap loading may finish after getty is started, but hostname must
# be set before, so do it synchronously (it's fast)
echo 'setting hostname'
hostname -F /etc/hostname

udevd -d
# succeeded triggers don't mean successful coldplug, b/c a lot depends
# on udevd processing uevents in background, but triggers take time,
# so we don't wait and opportunistically run them in parallel
echo 'starting coldplug'
udevadm trigger --type=subsystems --action=add &
udevadm trigger --type=devices --action=add &

modules()
{
	local mod
	# On vanilla alpine /etc/modules contains: af_packet, ipv6.
	# udhcpc needs af_packet (see packet(7)) to send raw packets.
	if [ -f /etc/modules ]; then
		echo 'loading modules'
		sed 's/#.*//; /^[[:space:]]*$/d' /etc/modules |
			while read mod; do
				modprobe $mod
			done
	fi

	# sysctl sets ipv6 params, so run after module loading
	echo 'running sysctl'
	for f in /lib/sysctl.d/*.conf /etc/sysctl.d/*.conf \
				      /etc/sysctl.conf; do
		[ -f "$f" ] || continue
		sysctl -e -q -p "$f"
	done
}
modules &

echo 'starting syslogd'
# log to shmem buffer (read with logread) instead of /var/log/messages
syslogd -t -C4096 &

net()
{
	echo 'starting network'
	# ifup doesn't check iface existence before running its
	# configure commands and udevd might not have registered iface
	# yet, so we wait for it to appear
	while ! [ -e /sys/class/net/eth0 ]; do
		sleep 1
	done
	# note, /etc/udhcpc/udhcpc.conf must set RESOLV_CONF to e.g.
	# /run/resolv.conf and /etc/resolv.conf must be a symlink to it
	# otherwise udhcpc tries to write /etc/resolv.conf on ro fs
	ifup -a
	# kill udhcpc after obtaining ip, send SIGKILL b/c udhcpc
	# releases ip on SIGTERM if -R was supplied (the default)
	pkill -9 udhcpc
	ntpd -n -q -d -p pool.ntp.org
}
net &

echo 'running fsck'
# make sure fsck.ext4 exists, b/c busybox fsck doesn't return error
# when it can't exec fsck.<fstype> program (it prints error though,
# see _void_ execute() in e2fsprogs/fsck.c), util-linux fsck is fine
if ! command -v fsck.ext4 >/dev/null; then
	echo 'fsck.ext4 not found'
	exit 1
fi
ret=0
fsck -T -A -P -p || ret=$?
# if check was ok or errors were corrected, then continue, otherwise
# stop (see fsck return codes in fsck(8))
[ $ret -lt 2 ] || exit 1

echo 'mounting local filesystems'
mount -a

# set KERN_EMERG==0 msg level, so it's always printed on console even
# when "quiet" param was passed to kernel
echo '<0>sysinit done' >/dev/kmsg
